set nocompatible
filetype off

" Start by removing autocommands
autocmd!

" Just in case
let mapleader=','

" Windows plays by its own rules
if has('win64') || has('win32') || has('win32unix')
    let vimrc_vimfiles_dir=expand('~/vimfiles')
else
    let vimrc_vimfiles_dir=expand('~/.vim')
endif

let path=expand(vimrc_vimfiles_dir . '/bundle')
let &rtp.=',' . expand(vimrc_vimfiles_dir . '/bundle/Vundle.vim')

call vundle#begin(path)

Plugin 'VundleVim/Vundle.vim'

if has('gui_running') || (has('win64') && !has('win32') && !has('win32unix'))
    " Windows don't really like the colour scheme
    Plugin 'altercation/vim-colors-solarized'
endif
Plugin 'Glench/Vim-Jinja2-Syntax'
Plugin 'honza/vim-snippets'
Plugin 'junegunn/goyo.vim'
Plugin 'junegunn/limelight.vim'
Plugin 'rust-lang/rust.vim'
Plugin 'scrooloose/syntastic'
Plugin 'SirVer/ultisnips'
Plugin 'szw/vim-tags'
Plugin 'tomtom/tcomment_vim'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-ragtag'
Plugin 'tpope/vim-sleuth'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-vinegar'
Plugin 'Valloric/YouCompleteMe'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'vimoutliner/vimoutliner'

call vundle#end()

filetype plugin indent on

""" Plugin settings

" Syntastic
let g:syntastic_always_populate_loc_list=1
let g:syntastic_auto_loc_list=1
let g:syntastic_loc_list_height=5
let g:syntastic_check_on_open=1

if has('win32')
    let g:syntastic_python_python_exec='python'
else
    let g:syntastic_python_python_exec='/usr/bin/env python'
endif

" Maybe use pylint? I removed it for now
let g:syntastic_python_checkers=['flake8']

let g:syntastic_c_checkers=[]
let g:syntastic_cpp_checkers=[]

let g:syntastic_xml_chekers=['xmllint']

let g:syntastic_html_checkers=['tidy']

" Airline
if !exists('g:airline_symbols')
    let g:airline_symbols={}
endif

let g:airline_left_sep=''
let g:airline_left_alt_sep=''
let g:airline_right_sep=''
let g:airline_right_alt_sep=''
let g:airline_symbols.branch=''
let g:airline_symbols.readonly=''
let g:airline_symbols.linenr='¶'
let g:airline_symbols.paste='Þ'
let g:airline_symbols.whitespace='Ξ'

" YouCompleteMe
let g:ycm_global_ycm_extra_conf=vimrc_vimfiles_dir . '/ycm_extra_conf.py'
let g:ycm_register_as_syntastic_checker=1
let g:ycm_seed_identifiers_with_syntax=1
let g:ycm_collect_identifiers_from_tags_files=1
let g:ycm_autoclose_preview_window_after_completion=1

" vim-tags
let g:vim_tags_auto_generate=1
let g:vim_tags_ignore_files=['.gitignore', '.svnignore', '.cvsignore']
let g:vim_tags_ignore_file_comment_pattern='^[#"]'
let g:vim_tags_directories=[".git", ".hg", ".svn", ".bzr", "_darcs", "CVS"]
let g:vim_tags_main_file='tags'
let g:vim_tags_extension='.tags'
let g:vim_tags_cache_dir=vimrc_vimfiles_dir

" UltiSnips
let g:UltiSnipsUsePythonVersion=2
let g:UltiSnipsExpandTrigger='<f10>'
let g:UltiSnipsListSnippets='<c-f10>'
let g:UltiSnipsJumpForwardTrigger='<f10>'
let g:UltiSnipsJumpBackwardTrigger='<s-f10>'

" Goyo
let g:goyo_width=92
let g:goyo_margin_top=4
let g:goyo_margin_bottom=4
let g:goyo_linenr=0
map <Leader>G :Goyo<CR>

" Limelight
autocmd User GoyoEnter Limelight
autocmd User GoyoLeave Limelight!
let g:limelight_conceal_ctermfg='237'
map <Leader>L :Limelight!!<CR>

" Solarized
set background=dark
colorscheme solarized

" Plugins loaded, enable syntax
syntax enable

set modelines=3
set encoding=utf-8

" For plugin compatibility
set laststatus=2
set shortmess+=c

" Window autoresize
set equalalways eadirection=both

" Backups
set nobackup
" set backupdir=~/tmp,C:\\Temp,/tmp " Just in case though

" On error (make) first check all tabs, then create new one
set switchbuf=usetab,newtab

" Wrap to textwidth, wrap comments, insert comment leader on LF,
" insert comment leader on o, allow formatting with gq{motion}
set formatoptions=tcroq

" Session options
set ssop=blank,folds,help,sesdir,tabpages,winsize

" Allow backspacing
set backspace=indent,eol,start

" 4-wide space tabs
" Replaced by vim-sleuth, I hope
" set tabstop=4 softtabstop=4 shiftwidth=4 expandtab

" C family comment settings
" First reset the list to just ://
autocmd FileType c,d,cpp setlocal comments=://
" Priority increases as you get lower in this list
autocmd FileType c,d,cpp setlocal comments^=:///
autocmd FileType c,d,cpp setlocal comments^=sr:/*,mb:*,ex:*/
autocmd FileType c,d,cpp setlocal comments^=sr:/**,mb:*,ex:*/
autocmd FileType d setlocal comments^=sr:/+,mb:+,ex:+/
autocmd FileType d setlocal comments^=sr:/++,mb:+,ex:+/

" Coolbasic
autocmd BufNewFile,BufRead *.cb setfiletype coolbasic
autocmd BufNewFile,BufRead *.CB setfiletype coolbasic
" CoolBasic needs all these, always
autocmd FileType coolbasic setlocal comments=:\',://
autocmd FileType coolbasic setlocal sts=4 sw=4 et
autocmd FileType coolbasic setlocal fileformat=dos

" Vimscript comments
autocmd FileType vim setlocal comments=:\"

" Makefiles need tabs
autocmd FileType make setlocal noet

" Python wrap to tw only in comments -> remove t from fo
autocmd FileType python setlocal fo-=t
" also set tw
autocmd FileType python setlocal tw=72

" Smarter searching
set ignorecase
set smartcase

" Incremental searches w/ hilight
set incsearch
set hlsearch

" Autoloader
augroup myvimrc
au!
au BufWritePost .vimrc,_vimrc,vimrc,.gvimrc,_gvimrc,gvimrc so $MYVIMRC | if has('gui_running') | so $MYGVIMRC | endif
augroup END
